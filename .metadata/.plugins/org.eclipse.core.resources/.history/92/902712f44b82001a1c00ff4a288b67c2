package com.mars.generator;

public class Coordinate {
	
	 private int xCoordinate;
	    private int yCoordinate;

	    public Coordinate(final int xCoordinate, final int yCoordinate) {
	        this.xCoordinate = xCoordinate;
	        this.yCoordinate = yCoordinate;
	    }

	    public Coordinate newCoordinatesFor(final int xCoordinateStepValue, final int yCoordinateStepValue) {
	        return new Coordinate(this.xCoordinate + xCoordinateStepValue, this.yCoordinate + yCoordinateStepValue);
	    }

	    @Override
	    public String toString() {
	        StringBuilder coordinateOutput = new StringBuilder();
	        coordinateOutput.append(xCoordinate);
	        coordinateOutput.append(" ");
	        coordinateOutput.append(yCoordinate);
	        return coordinateOutput.toString();
	    }

	    public boolean hasWithinBounds(final Coordinate coordinates) {
	        return isXCoordinateWithinBounds(coordinates.xCoordinate) && isYCoordinateWithinBounds(coordinates.yCoordinate);
	    }

	    public boolean hasOutsideBounds(final Coordinate coordinates) {
	        return isXCoordinateInOutsideBounds(coordinates.xCoordinate) && isYCoordinateInOutsideBounds(coordinates.yCoordinate);
	    }

	    private boolean isXCoordinateInOutsideBounds(final int xCoordinate) {
	        return xCoordinate >= this.xCoordinate;
	    }

	    private boolean isYCoordinateInOutsideBounds(final int yCoordinate) {
	        return yCoordinate >= this.yCoordinate;
	    }

	    private boolean isYCoordinateWithinBounds(final int yCoordinate) {
	        return yCoordinate <= this.yCoordinate;
	    }

	    private boolean isXCoordinateWithinBounds(final int xCoordinate) {
	        return xCoordinate <= this.xCoordinate;
	    }

	    public Coordinate newCoordinatesForStepSize(final int xCoordinateStepValue, final int yCoordinateStepValue) {
	        return new Coordinate(xCoordinate+xCoordinateStepValue, yCoordinate+yCoordinateStepValue);
	    }


}
